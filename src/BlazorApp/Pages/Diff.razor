@page "/Diff/{App1ModelIdentifier}/{App2ModelIdentifier}"
@layout GraphLayout
@inject IJSRuntime JS
@inject IGraphService graphService;

<h3>Diff</h3>
@if (IsGraphAvailable)
{
    <div class="graph-canvas">

        <div class="topbar">
            <div class="layout">
                <div class="column">
                    <div><label for="layout-control">Layout: <select name="layout-control" id="layout-control">
                        <option selected disabled></option>
                        <option value="random">Random</option>
                        <option value="grid">Grid</option>
                        <option value="circle">Circle</option>
                        <option value="concentric">Concentric</option>
                        <option value="breadthfirst">Breadthfirst</option>
                        <option value="cose">Cose</option>
                        <option value="cose-bilkent">Cose-bilkent</option>
                        <option value="cola">Cola</option>
                        <option value="euler">Euler</option>
                        <option value="dagre">Dagre</option>
                        <option value="klay">Klay</option>
                    </select></label></div>
                    <div>
                        <label for="show-labels" class="custom-checkbox">Show labels<input type="checkbox" id="show-labels" checked><span class="checkmark"></span></label>
                    </div>
                    <div>
                        <button id="show-all" type="button" class="button_custom">Show all nodes</button>
                    </div>
                </div>

                <div class="column">
                    <div class="extra-margin-left">
                        <label for="toggle-abstract-layer" class="custom-checkbox">Show abstract layer
                            <input type="checkbox" id="toggle-abstract-layer" checked>
                            <span class="checkmark"></span>
                        </label>
                    </div>
                    <div class="extra-margin-left"><label for="toggle-concrete-layer" class="custom-checkbox">Show concrete layer<input type="checkbox" id="toggle-concrete-layer" checked><span class="checkmark"></span></label></div>
                    <div class="extra-margin-left"><label for="toggle-sequence-layer" class="custom-checkbox">Show sequence layer<input type="checkbox" id="toggle-sequence-layer" checked><span class="checkmark"></span></label></div>
                    <div class="extra-margin-left"><label for="toggle-layer-transitions" class="custom-checkbox">Show inter-layer edges<input type="checkbox" id="toggle-layer-transitions" checked><span class="checkmark"></span></label></div>
                </div>

                <div class="column">
                    <div class="extra-margin-left">
                        <div class="stats-text" id="stats-abstract-states"></div>
                        <div class="stats-text" id="stats-abstract-actions"></div>
                        <div class="stats-text" id="stats-concrete-states"></div>
                        <div class="stats-text" id="stats-concrete-actions"></div>
                    </div>
                </div>
            </div>
        </div>

        <div class="viewpane" id="cy">
        </div>

        <div class="cd-panel cd-panel--from-right js-cd-panel-main">
            <div class="cd-panel__container">
                <div class="panel-header" id="content-panel-header">
                </div>
                <div class="cd-panel__content" id="cd-content-panel">

                </div> <!-- cd-panel__content -->
            </div> <!-- cd-panel__container -->
        </div>
    </div>
}
else
{
    <div class="text-center">
        <h1>@ProgressStatus</h1>
        <div class="spinner-border" role="status">
            <span class="visually-hidden">loading</span>
        </div>
    </div>
} 


@code {
    public bool IsGraphAvailable { get; set; } = false;
    public string ProgressStatus { get; set; } = "Loading graph data...";
    [Parameter] public string App1ModelIdentifier { get; set; }
    [Parameter] public string App2ModelIdentifier { get; set; }
    public string? GraphInJson { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var elements = await graphService.FetchDiffGraph(new ModelIdentifier(App1ModelIdentifier), new ModelIdentifier(App2ModelIdentifier));

        GraphInJson = JsonSerializer.Serialize(elements);

        IsGraphAvailable = true;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (IsGraphAvailable)
        {
            await JS.InvokeVoidAsync("loadDiffGraph", GraphInJson);
        }
    }
}
