@page "/counter"
@using MediatR
@using Microsoft.Extensions.Options
@using System.Text.Json
@using Testar.ChangeDetection.BlazarApp
@using Testar.ChangeDetection.Core.Requests
@using Testar.ChangeDetection.Core.Strategy
@inject IChangeDetectionStrategy strategy;
@inject IOrientDbCommand orientDbCommand;

@inject IMediator mediator;
@using System.IO
@inject IJSRuntime JS

<PageTitle>TESTAR Change Detection</PageTitle>

<h1>TESTAR Change Detection</h1>

<button class="btn btn-primary" @onclick="IncrementCount">Compare simple_model and download results</button>

@code {
    private async Task IncrementCount()
    {
        // TODO: Following should come from user input
        var options = new OrientDbOptions
        {
            DatabaseName = "testar2",
            UserName = "testar",
            Password = "testar",
            Url = new Uri("http://localhost:2480/", UriKind.Absolute)
        };
        try{

            var ControlName = "simpel_model";
            var TestName = "simpel_model";

            var ControlVersion = "1.0.0";
            var TestVersion = "2.0.0";

            var control = await mediator.Send(new ApplicationRequest { ApplicationName = ControlName, ApplicationVersion = ControlVersion });
            var test = await mediator.Send(new ApplicationRequest { ApplicationName = TestName, ApplicationVersion = TestVersion });
            var fileHandler = new FileHandler(control, test);

            await strategy.ExecuteChangeDetectionAsync(control, test, fileHandler);

            var fileStream = fileHandler.DownloadOutputAsZip();
            var fileName = "output.zip";
            using var streamRef = new DotNetStreamReference(stream: fileStream);

            await JS.InvokeVoidAsync("downloadFileFromStream", fileName, streamRef);
        }
        catch(Exception ex)
        {
            var x = ex.Message;
        }
    }

    private class ApplicationJson
    {
        public string ModelIdentifier { get; init; }
        public string ApplicationName { get; init; }
        public string ApplicationVersion { get; init; }

        public string[] AbstractionAttributes { get; set; }
    }
}
