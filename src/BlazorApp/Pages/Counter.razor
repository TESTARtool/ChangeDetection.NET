@page "/counter"
@using MediatR
@using Microsoft.Extensions.Options
@using System.Text.Json
@using Testar.ChangeDetection.BlazarApp
@using Testar.ChangeDetection.Core.Requests
@using Testar.ChangeDetection.Core.Strategy
@using System.IO
@inject IChangeDetectionStrategy strategy;
@inject IOrientDbCommand orientDbCommand;

@inject IMediator mediator;
@inject IJSRuntime JS

@attribute [Authorize]

<PageTitle>TESTAR Change Detection</PageTitle>

<h1>TESTAR Change Detection</h1>

<button class="btn btn-primary" @onclick="IncrementCount">Compare simple_model and download results</button>
<p></p>

<AuthorizeView>
    <Authorized>
        <span>You're authorized! :)</span>
    </Authorized>
    <NotAuthorized>
        <span>You're not authorized, buddy</span>
    </NotAuthorized>
</AuthorizeView>

@code {
    private async Task IncrementCount()
    {
        try{

            var ControlName = "simpel_model";
            var TestName = "simpel_model";

            var ControlVersion = "1.0.0";
            var TestVersion = "2.0.0";

            var control = await mediator.Send(new ApplicationRequest { ApplicationName = ControlName, ApplicationVersion = ControlVersion });
            var test = await mediator.Send(new ApplicationRequest { ApplicationName = TestName, ApplicationVersion = TestVersion });
            var fileHandler = new FileHandler(control, test);

            await strategy.ExecuteChangeDetectionAsync(control, test, fileHandler);

            var fileStream = fileHandler.DownloadOutputAsZip();
            var fileName = "output.zip";
            using var streamRef = new DotNetStreamReference(stream: fileStream);

            await JS.InvokeVoidAsync("downloadFileFromStream", fileName, streamRef);
        }
        catch(Exception ex)
        {
            var x = ex.Message;
        }
    }
}