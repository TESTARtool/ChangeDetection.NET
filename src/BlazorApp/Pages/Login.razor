@page "/login"
@inject NavigationManager NavigationManager;
@inject IAuthService authService;
@inject ILocalStorageService localStorage;

@if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        <p>@Error</p>
    </div>
}
<div class="text-center">
    <div class="form-signin">
        <EditForm Model="user" OnSubmit="HandleLogin">
            <img class="mb-4" src="images/testar_logo.png" alt="Testar logo" >
            <h1 class="h3 mb-3 fw-normal">Please sign in</h1>

            <DataAnnotationsValidator />
            <div class="form-floating">
                <InputText id="url" class="form-control" @bind-Value="user.ServerUrl" type="url" placeholder="url"  />
                <label for="url" >Server URL</label>
            </div>

            <div class="form-floating mt-1">
                <InputText id="username" @bind-Value="user.UserName" type="username" class="form-control"
                           name="username" placeholder="username" />
                <label for="username">Username</label>
            </div>

            <div class="form-floating mt-1">
                <InputText id="password" @bind-Value="user.Password" type="password" class="form-control" name="password" placeholder="password"/>
                <label for="password">Password</label>
            </div>
            <br/>

            <button type="submit" class="w-100 btn btn-lg btn-primary">
                @if (IsSigningIn)
                {
                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                    <span>Signing in...</span>
                }
                else
                {
                    <span>Sign In</span>
                }
              
            </button>

        </EditForm>
    </div>
</div>

@code
{
    private bool IsSigningIn { get; set; }
    private bool ShowErrors { get; set; }
    private string Error { get; set; }
    private User user = new User();

    protected async override Task OnInitializedAsync()
    {
        var location = await localStorage.GetItemAsync<Uri?>("serverLocation");
        if (location is not null)
        {
            user.ServerUrl = location.ToString();
        }
    }

    private async void HandleLogin()
    {
        try
        {
            IsSigningIn = true;
            ShowErrors = false;

            var success = await authService.LoginAsync(user);

            if (success)
            {
                NavigationManager.NavigateTo("/");
            }
            else
            {
                Error = "Unable to sign in. Please check the data";
                ShowErrors = true;
            }
        } 
        catch(Exception ex)
        {
            Error = ex.Message;
            ShowErrors = true;
        }
        finally
        {
            IsSigningIn = false;
            StateHasChanged();
        }
    }
}
