@using BlazorApp.ViewModels
@using MediatR
@using Testar.ChangeDetection.Core
@using Testar.ChangeDetection.Core.Requests
@inject IMediator mediator;

<h3>Available Models</h3>

<EditForm Model="applications">
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th scope="col"></th>
                <th scope="col">Identifier</th>
                <th scope="col">Application Name</th>
                <th scope="col">Application Version</th>
            </tr>
        </thead>
        <tbody>
        @foreach(var application in applications)
        {
            <tr>
                <td scope="row">
                    <InputCheckbox @bind-value="application.IsSelected" onselect="SelectionChanged" />
                </td>
                <td>@application.ModelIdentifier.Value</td>
                <td>@application.ApplicationName</td>
                <td>@application.ApplicationVersion</td>
            </tr>    
        }  
        </tbody>
    </table>
</EditForm>

@code {
    ApplicationViewModel[] applications = Array.Empty<ApplicationViewModel>();

    private void SelectionChanged()
    {
        var count = applications.Count(x => x.IsSelected);

        Console.WriteLine(count);
    }

    protected override async Task OnInitializedAsync()
    {
        var models = await mediator.Send(new AllApplicationRequest());

        applications = models
            .Select(x => new ApplicationViewModel
            {
                ApplicationName = x.ApplicationName,
                ApplicationVersion = x.ApplicationVersion,
                ModelIdentifier = x.ModelIdentifier,
                IsSelected = false,
                AbstractionAttributes = x.AbstractionAttributes
            })
            .ToArray();

        await base.OnInitializedAsync();
    }
}
